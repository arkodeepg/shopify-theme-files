{% if section.blocks.size > 0 %}

  {%- liquid
    assign list_count = section.blocks.size
    if section.settings.use_slider and list_count > 1
      assign slider = true
    else
      assign slider = false
    endif
    assign background_color = false
    if section.settings.background != 'rgba(0,0,0,0)' and section.settings.background != blank
      assign background_color = true
      assign background_color_section = section.settings.background
    endif    
    if section.settings.background_gradient != 'rgba(0,0,0,0)' and section.settings.background_gradient != blank
      assign background_color = true
      assign background_color_section = section.settings.background_gradient
    endif
    capture classes
      echo 'dynamic-section dynamic-section-'
      echo section.id 
      echo ' section-padding-top section-padding-bottom section-margin-bottom '
      if section.settings.padding_border
        echo 'section-border '
      endif
    endcapture
    assign slider_color = false
    if section.settings.use_slider_color != 'rgba(0,0,0,0)' and section.settings.use_slider_color != blank
      assign slider_color = true
      assign slider_color_section = section.settings.use_slider_color
    endif
    if slider
      if section.settings.product_row_mobile == 2
        assign size_mobile = 510
      elsif section.settings.product_row_mobile == 3
        assign size_mobile = 300
      elsif section.settings.product_row_mobile == 4
        assign size_mobile = 210
      else 5
        assign size_mobile = 160
      endif
      if section.settings.product_row == 2
        assign block_width = 'six'
        assign size = 880
        capture sizes
          echo '(min-width: 768px) 880px, '
          echo size_mobile| append: 'px'
        endcapture
      elsif section.settings.product_row ==  3
        assign block_width = 'four'
        assign size = 460
        capture sizes
          echo '(min-width: 768px) 460px, '
          echo size_mobile| append: 'px'
        endcapture
      elsif section.settings.product_row ==  4
        assign block_width = 'three'
        assign size = 330
        capture sizes
          echo '(min-width: 768px) 330px, '
          echo size_mobile| append: 'px'
        endcapture
      else
        assign block_width = 'two-half'
        assign size = 250
        capture sizes
          echo '(min-width: 768px) 250px, '
          echo size_mobile| append: 'px'
        endcapture
      endif
    endif
  -%}
  
  {% style %}
    .dynamic-section-{{ section.id }} { 
      {%- if background_color -%}
      --background:{{ background_color_section }};
      {%- endif -%}
      {% if slider_color %}
      --arrow_color:{{ slider_color_section }};
      {% endif %}
      --section-padding-top-mobile: {{ section.settings.padding_top_mobile }}px;
      --section-padding-top-desktop: {{ section.settings.padding_top_desktop }}px;
      --section-padding-bottom-mobile: {{ section.settings.padding_bottom_mobile }}px;
      --section-padding-bottom-desktop: {{ section.settings.padding_bottom_desktop }}px;
      --section-margin-bottom-mobile: {{ section.settings.margin_bottom_mobile }}px;
      --section-margin-bottom-desktop: {{ section.settings.margin_bottom_desktop }}px;
    }
  {% endstyle %}
  
  <section data-section-id="{{ section.id }}" 
           data-section-type="carousel" 
           data-carousel-type="section"
           data-url="{{ 'script.carousel.js' | asset_url }}"
           class="{{ classes }}{% if settings.animation_enable %}animate-section-div {% endif %}clearfix">
    
    <div class="container {% if slider %}no-pad{% else %}half-pad{% endif %}{% if settings.animation_enable %} animate-section animate-section-margin load{% endif %} clearfix">
      <div class="{% if slider %}glider-contain {% endif %}tab-body">
        <div{% if slider %} id="glider-carousel-{{ section.id }}"{% unless list_count < 3 %} data-slides="{% if section.settings.product_row_mobile > list_count %}{{ list_count | minus: 0.5 }}{% else %}{{ section.settings.product_row_mobile | minus: 0.5 }}{% endif %}"{% endunless %} data-limit="{{ section.settings.product_row | minus: 0.5 }}" {% endif %} class="{% if slider %}glider {% if list_count < 5 %}no-drag {% endif %}{% endif %}clearfix">
          <div class="product-loop{% if list_count < 5 %} {{ section.settings.horizontal_content_alignment }}{% endif %}{% if slider %} glider-track{% endif %}">
      
            {% for block in section.blocks %}
            
              {%- liquid
                unless slider
                  case block.settings.block_width
                    when '2'
                      assign block_width = 'two'
                      assign size = 580
                      assign sizes = '(min-width: 600px) calc(16.66vw - 40px), (min-width: 1220px) 180px, calc(100vw - 40px)'
                    when '3'
                      assign block_width = 'three'
                      assign size = 580
                      assign sizes = '(min-width: 600px) calc(25vw - 40px), (min-width: 1220px) 280px, calc(100vw - 40px)'
                    when '4'
                      assign block_width = 'four'
                      assign size = 580
                      assign sizes = '(min-width: 600px) calc(33.33vw - 40px), (min-width: 1220px) 380px, calc(100vw - 40px)'
                    when '6'
                      assign block_width = 'six'
                      assign size = 580
                      assign sizes = '(min-width: 600px) calc(50vw - 40px), (min-width: 1220px) 580px, calc(100vw - 40px)'
                    when '8'
                      assign block_width = 'eight'
                      assign size = 880
                      assign sizes = '(min-width: 600px) calc(66.66vw - 40px), (min-width: 1220px) 780px, calc(100vw - 40px)'
                    when '9'
                      assign block_width = 'nine'
                      assign size = 880
                      assign sizes = '(min-width: 600px) calc(75vw - 40px), (min-width: 1220px) 880px, calc(100vw - 40px)'
                    when '10'
                      assign block_width = 'ten'
                      assign size = 1180
                      assign sizes = '(min-width: 600px) calc(83.33vw - 40px), (min-width: 1220px) 980px, calc(100vw - 40px)'
                    when '12'
                      assign block_width = 'twelve'
                      assign size = 1180
                      assign sizes = '(min-width: 600px) calc(100vw - 40px), (min-width: 1220px) 1180px, calc(100vw - 40px)'
                  endcase
                endunless
              -%}
      
              {% case block.type %}
      
                {% when 'testimonial' %}
                
                  {%- liquid
                    capture alt
                      if block.settings.title != blank
                        echo block.settings.title
                      elsif block.settings.body != blank
                        echo block.settings.body | strip_html
                      else
                        echo block.settings.icon
                      endif
                    endcapture 
                    assign rating_value_rating = block.settings.block_review
                    assign rating_count = 1
                    assign rating_scale_max = 5
                    assign rating_decimal = 0
                    assign decimal = rating_value_rating | modulo: 1
                    if decimal >= 0.3 and decimal <= 0.7
                      assign rating_decimal = 0.5
                    elsif decimal > 0.7
                      assign rating_decimal = 1
                    endif  
                    capture rating_value
                      echo rating_value_rating | round: 1
                      echo ' / '
                      echo rating_scale_max
                    endcapture  
                    assign text_color = false
                    if block.settings.section_color != 'rgba(0,0,0,0)' and block.settings.section_color != blank
                      assign text_color = true
                      assign text_color_section = block.settings.section_color
                    endif     
                    assign text_color_hover = false
                    if block.settings.section_color_hover != 'rgba(0,0,0,0)' and block.settings.section_color_hover != blank
                      assign text_color_hover = true
                      assign text_color_hover_section = block.settings.section_color_hover
                    endif
                    if block.settings.enable_lazy
                      assign lazy = 'lazy'
                    else
                      assign lazy = 'eager'
                    endif
                  -%}
                
                  <div class="dynamic-section-{{ block.id }} product half-pad {{ block_width }} animate animate-loop-{{ forloop.index0 }} {{ section.settings.vertical_content_alignment }}" {{ block.shopify_attributes }}>
                    
                    {% style %}
                      .stars {
                        --percent: calc((var(--rating) / var(--rating_max) + var(--rating_decimal) * var(--star_size) / (var(--rating_max) * (var(--star_spacing) + var(--star_size)))) * 100%);
                      }
                      .dynamic-section-{{ block.id }} { 
                        --stars: {{ block.settings.block_review_size }};
                        {%- if text_color -%}
                        --headline_font_color:{{ text_color_section }};
                        --body_font_color:{{ text_color_section }};
                        {%- endif -%}
                        {%- if text_color_hover -%}
                        --body_font_hover_color:{{ text_color_hover_section }};
                        {%- endif -%}
                      }
                    {% endstyle %}
  
                    <div class="table">
                      <div class="table-cell {{ section.settings.vertical_content_alignment }} {{ block.settings.text_alignment }}">
                        <div{% if block.settings.block_img != blank %} class="testi-grid {% if block.settings.layout == 'horizontal' %}horizontal{% else %}vertical{% endif %}"{% endif %}>
                          {%- liquid
                            if block.settings.block_img != blank
                              if block.settings.enable_round
                                echo '<span class="img-round">'
                                capture bgsizes
                                  echo block.settings.block_img.width
                                  echo 'px'
                                endcapture
                                render 'image.load', img_src: block.settings.block_img, size: block.settings.block_img.width, alt: alt, background: true, lazy: lazy, sizes: bgsizes
                                echo '</span>'
                              else
                                echo '<span>'
                                render 'image.load', img_src: block.settings.block_img, size: 200, alt: alt, lazy: lazy, sizes: '200px'
                                echo '</span>'
                              endif
                            endif                
                          -%}
  
                          <div class="no-height">
                            <div class="reviews bottompad-quarter clearfix">
                              <span class="stars-rating" role="img" aria-label="{{ 'products.general.reviews' | t: total: rating_value, count: rating_count | escape }}">
                                <span class="stars" 
                                      style="--rating: {{ rating_value_rating | floor }};--rating_max: {{ rating_scale_max }}; --rating_decimal: {{ rating_decimal }};" 
                                      aria-hidden="true"></span>
                              </span>
                            </div>
                            {% if block.settings.title != blank %}<h2 class="section-title-{{ block.settings.title_size }}">{{ block.settings.title | escape }}</h2>{% endif %}
                            {% if block.settings.sub_title != blank %}<h3 class="section-title-{{ block.settings.title_sub_size }}">{{ block.settings.sub_title | escape }}</h3>{% endif %}
                            {% if block.settings.body != blank %}{{ block.settings.body }}{% endif %}
                          </div>
                  
                        </div>
                      </div>
                    </div>
                  
                  </div>
                
                {% when 'image' %}
                
                  {%- liquid
                    capture alt
                      if block.settings.block_img.alt != blank
                        echo block.settings.block_img.alt
                      elsif block.settings.body != blank
                        echo block.settings.body
                      else
                        echo block.settings.block_img | split: '/' | last | replace: '-', ' ' | replace: '_', ' ' | split: '.' | first | capitalize
                      endif
                    endcapture
                    assign text_color = false
                    if block.settings.section_color != 'rgba(0,0,0,0)' and block.settings.section_color != blank
                      assign text_color = true
                      assign text_color_section = block.settings.section_color
                    endif     
                    assign text_color_hover = false
                    if block.settings.section_color_hover != 'rgba(0,0,0,0)' and block.settings.section_color_hover != blank
                      assign text_color_hover = true
                      assign text_color_hover_section = block.settings.section_color_hover
                    endif
                    if block.settings.enable_lazy
                      assign lazy = 'lazy'
                    else
                      assign lazy = 'eager'
                    endif
                  -%}
          
                  <div class="dynamic-section-{{ block.id }} product half-pad {{ block_width }} animate animate-loop-{{ forloop.index0 }} {{ section.settings.vertical_content_alignment }}" {{ block.shopify_attributes }}>
                    
                    {% style %}
                      .dynamic-section-{{ block.id }} {
                        {%- if text_color -%}
                          --headline_font_color:{{ text_color_section }};
                          --body_font_color:{{ text_color_section }};
                        {%- endif -%}           
                        {%- if text_color_hover -%}
                          --body_font_hover_color:{{ text_color_hover_section }};
                        {%- endif -%}   
                      }
                    {% endstyle %}
                    
                    <div class="table{% if block.settings.image_fit =='cover' %} {% if block.settings.block_img == blank %} placeholder-svg-background{% else %} lazycontainer{% endif %}{% endif %} relative clearfix">
                      {% if block.settings.link != blank and block.settings.block_img != blank %}<a href="{{ block.settings.link | escape }}" title="{{ alt | escape }}" class="absolute"></a>{% endif %}
                      {%- liquid
                        if block.settings.block_img != blank and block.settings.image_fit =='cover'
                          render 'image.load', img_src: block.settings.block_img, size: block.settings.block_img.width, alt: alt, background: true, lazy: lazy, sizes: sizes
                        endif
                      -%}
                      
                      {% if block.settings.image_fit =='contain' or block.settings.body != blank %}
                      <div class="relative{% if block.settings.block_img != blank and block.settings.image_fit != 'cover' %} lazycontainer{% endif %} table-cell {{ section.settings.vertical_content_alignment }}">
                        <div class="no-height center image">
                          {%- liquid
                            if block.settings.block_img != blank
                              if block.settings.image_fit =='contain'
                                render 'image.load', img_src: block.settings.block_img, size: size, alt: alt, lazy: lazy, sizes: sizes
                              endif
                            else
                              echo 'image' | placeholder_svg_tag: 'placeholder-svg'
                            endif
                            if block.settings.body != blank
                              echo '<div class="toppad-quarter '
                              echo block.settings.text_alignment
                              echo '">'
                              echo block.settings.body
                              echo '</div>'
                            endif
                          -%}
                        </div>
                      </div>
                      {% endif %}
                    </div>
                  </div>
              
              {% endcase %}
            {% endfor %}
  
          </div>
        </div>
      </div>
      {% if slider %}
        <div id="glider-pagination-{{ section.id }}" class="glider-pagination {% if section.settings.product_row > list_count %}hidden {% endif %}tab-body relative">
          <button id="glider-button-prev-{{ section.id }}" class="glider-button-prev" type="button" aria-label="{{ 'products.general.previous' | t | escape }}">{%- render 'icons.theme', icon: 'left', size: '16' -%}</button>
          <button id="glider-button-next-{{ section.id }}" class="glider-button-next" type="button" aria-label="{{ 'products.general.next' | t | escape }}">{%- render 'icons.theme', icon: 'right', size: '16' -%}</button>
        </div>
      {% endif %}
    </div>
    
  </section>

{% endif %}

{% schema %}
  {
    "name": "t:sections.testimonials.name",
    "settings": [
      {
        "type": "select",
        "id": "horizontal_content_alignment",
        "label": "t:sections.horizontal_position.label",
        "default": "center",
        "options": [
          {
            "value": "left",
            "label": "t:sections.alignment.left"
          },
          {
            "value": "center",
            "label": "t:sections.alignment.center"
          },
          {
            "value": "right",
            "label": "t:sections.alignment.right"
          }
        ]
      },
	  {
        "type": "select",
        "id": "vertical_content_alignment",
        "label": "t:sections.vertical_position.label",
        "default": "top",
        "options": [
          {
            "value": "top",
            "label": "t:sections.vertical_position.top"
          },
          {
            "value": "middle",
            "label": "t:sections.vertical_position.middle"
          },
          {
            "value": "bottom",
            "label": "t:sections.vertical_position.bottom"
          }
        ]
      },
      {
        "type": "checkbox",
        "id": "use_slider",
        "label": "t:sections.use_slider_blocks.label",
        "info": "t:sections.use_slider_blocks.info",
        "default": false
      },
      {
        "type": "range",
        "id": "product_row",
        "min": 2,
        "max": 5,
        "step": 1,
        "label": "t:sections.use_slider_blocks.desktop",
        "default": 5
      },
      {
        "type": "range",
        "id": "product_row_mobile",
        "min": 2,
        "max": 5,
        "step": 1,
        "label": "t:sections.use_slider_blocks.mobile",
        "default": 3
      },
      {
        "id": "use_slider_color",
        "type": "color",
        "label": "t:sections.multi_slide_color.label"
      },
      {
        "type": "header",
        "content": "t:sections.section.name.content"
      },
      {
        "id": "background",
        "type": "color",
        "label": "t:sections.section.settings.background_color.label"
      },
      {
        "id": "background_gradient",
        "type": "color_background",
        "label": "t:sections.section.settings.background_gradient.label"
      },
      {
        "type": "paragraph",
        "content": "t:sections.section.settings.mobile.content"
      },
      {
        "id": "padding_top_mobile",
        "type": "range",
        "label": "t:sections.section.settings.top_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 20
      },
      {
        "id": "padding_bottom_mobile",
        "type": "range",
        "label": "t:sections.section.settings.bottom_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 20
      },
      {
        "id": "margin_bottom_mobile",
        "type": "range",
        "label": "t:sections.section.settings.bottom_margin.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 20
      },
      {
        "type": "paragraph",
        "content": "t:sections.section.settings.desktop.content"
      },
      {
        "id": "padding_top_desktop",
        "type": "range",
        "label": "t:sections.section.settings.top_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 40
      },
      {
        "id": "padding_bottom_desktop",
        "type": "range",
        "label": "t:sections.section.settings.bottom_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 40
      },
      {
        "id": "margin_bottom_desktop",
        "type": "range",
        "label": "t:sections.section.settings.bottom_margin.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 40
      },
      {
        "id": "padding_border",
        "type": "checkbox",
        "label": "t:sections.section.settings.border.label",
        "default": true
      }
    ],
    "blocks": [
      {
        "type": "testimonial",
        "name": "t:sections.testimonials.block",
        "settings": [
          {
            "id": "enable_lazy",
            "type": "checkbox",
            "label": "t:sections.section.settings.lazy.multiple.label",
            "default": true
          },
          {
            "type": "image_picker",
            "id": "block_img",
            "label": "t:sections.image.label"
          },
          {
            "id": "enable_round",
            "type": "checkbox",
            "label": "t:sections.testimonials.image",
            "default": true
          },
          {
            "type": "range",
            "id": "block_review",
            "min": 0,
            "max": 5,
            "step": 0.5,
            "label": "t:sections.testimonials.stars",
            "default": 5
          },
          {
            "id": "block_review_size",
            "type": "range",
            "label": "t:sections.testimonials.star_size",
            "min": 12,
            "max": 96,
            "step": 1,
            "unit": "px",
            "default": 24
          },
          {
            "type": "text",
            "id": "title",
            "label": "t:sections.testimonials.fullname",
    		"default": "Name"
          },
          {
            "id": "title_size",
            "type": "range",
            "label": "t:sections.heading.heading_size",
            "min": 12,
            "max": 96,
            "step": 6,
            "unit": "px",
            "default": 48
          },
          {
            "type": "text",
            "id": "sub_title",
            "label": "t:sections.testimonials.title",
			"default": "Title"
          },
          {
            "id": "title_sub_size",
            "type": "range",
            "label": "t:sections.subheading.subheading_size",
            "min": 12,
            "max": 96,
            "step": 6,
            "unit": "px",
            "default": 24
          },
          {
            "type": "richtext",
            "id": "body",
            "label": "t:sections.testimonials.block",
			"default": "<p>Add a testimonial to provide social proof</p>"
          },
          {
            "id": "section_color",
            "type": "color",
            "label": "t:sections.text.color"
          },
          {
            "id": "section_color_hover",
            "type": "color",
            "label": "t:sections.text.hover"
          },
          {
            "type": "select",
            "id": "text_alignment",
            "label": "t:sections.text_alignment.label",
            "default": "text-center",
            "options": [
              {
                "value": "text-left",
                "label": "t:sections.alignment.left"
              },
              {
                "value": "text-center",
                "label": "t:sections.alignment.center"
              },
              {
                "value": "text-right",
                "label": "t:sections.alignment.right"
              }
            ]
          },
    	  {
            "type": "select",
            "id": "layout",
            "label": "t:sections.layout.label",
            "default": "vertical",
            "options": [
              {
                "value": "vertical",
                "label": "t:sections.layout.vertical"
              },
              {
                "value": "horizontal",
                "label": "t:sections.layout.horizontal"
              }
            ]
          },
          {
            "type": "select",
            "id": "block_width",
            "label": "t:sections.content_width.label",
            "default": "6",
            "options": [
              {
                "value": "3",
                "label": "25%"
              },
              {
                "value": "4",
                "label": "33%"
              },
              {
                "value": "6",
                "label": "50%"
              },
              {
                "value": "8",
                "label": "66%"
              },
              {
                "value": "9",
                "label": "75%"
              },
              {
                "value": "12",
                "label": "100%"
              }
            ]
          }
        ]
      },
      {
        "type": "image",
        "name": "t:sections.image.name",
        "settings": [
          {
            "id": "enable_lazy",
            "type": "checkbox",
            "label": "t:sections.section.settings.lazy.multiple.label",
            "default": true
          },
          {
            "type": "image_picker",
            "id": "block_img",
            "label": "t:sections.image.label"
          },
          {
            "type": "select",
            "id": "image_fit",
            "label": "t:sections.image_fit.label",
            "default": "contain",
            "options": [
              {
                "value": "cover",
                "label": "t:sections.image_fit.fill"
              },
              {
                "value": "contain",
                "label": "t:sections.image_fit.fit"
              }
            ]
          },
          {
            "type": "richtext",
            "id": "body",
            "label": "t:sections.text.label",
			"default": "<p>Show custom content to provide an overview of the image and heading</p>"
          },
          {
            "id": "section_color",
            "type": "color",
            "label": "t:sections.text.color"
          },
          {
            "id": "section_color_hover",
            "type": "color",
            "label": "t:sections.text.hover"
          },
          {
            "type": "select",
            "id": "text_alignment",
            "label": "t:sections.text_alignment.label",
            "default": "text-center",
            "options": [
              {
                "value": "text-left",
                "label": "t:sections.alignment.left"
              },
              {
                "value": "text-center",
                "label": "t:sections.alignment.center"
              },
              {
                "value": "text-right",
                "label": "t:sections.alignment.right"
              }
            ]
          },
          {
            "type": "url",
            "id": "link",
            "label": "t:sections.link.label"
          },
          {
            "type": "select",
            "id": "block_width",
            "label": "t:sections.container_width.label",
            "default": "4",
            "options": [
              {
                "value": "2",
                "label": "16.5%"
              },
              {
                "value": "3",
                "label": "25%"
              },
              {
                "value": "4",
                "label": "33%"
              },
              {
                "value": "6",
                "label": "50%"
              },
              {
                "value": "8",
                "label": "66%"
              },
              {
                "value": "9",
                "label": "75%"
              },
              {
                "value": "10",
                "label": "87.5%"
              },
              {
                "value": "12",
                "label": "100%"
              }
            ]
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "t:sections.testimonials.name",
        "blocks" : [
          {
            "type": "testimonial"
          },
          {
            "type": "testimonial"
          }
        ]
      }
    ],
    "disabled_on": {
	  "templates": ["password"],
      "groups": ["custom.overlay"]
    }
  }
{% endschema %}