{% if section.blocks.size > 0 %}

  {%- liquid
    assign full_width = section.settings.full_width
    assign list_count = section.blocks.size
    assign screen = ''
    if section.settings.background_img_d != blank or section.settings.background_img_m != blank
      assign background_img = true
    else
      assign background_img = false
    endif         
    if background_img
      capture alt_d
        if section.settings.background_img_d.alt != blank
          echo section.settings.background_img_d.alt
        elsif section.settings.title != blank
          echo section.settings.title
        elsif section.settings.sub_title != blank
          echo section.settings.sub_title
        elsif section.settings.body != blank
          echo section.settings.body
        else
          echo section.settings.background_img_d | split: '/' | last | replace: '-', ' ' | replace: '_', ' ' | split: '.' | first | capitalize
        endif
      endcapture 
      capture alt_m
        if section.settings.background_img_m.alt != blank
          echo section.settings.background_img_m.alt
        elsif section.settings.title != blank
          echo section.settings.title
        elsif section.settings.sub_title != blank
          echo section.settings.sub_title
        elsif section.settings.body != blank
          echo section.settings.body
        else
          echo section.settings.background_img_m | split: '/' | last | replace: '-', ' ' | replace: '_', ' ' | split: '.' | first | capitalize
        endif
      endcapture 
    endif
    if section.settings.use_slider and list_count > 1
    	assign slider = true
    else
    	assign slider = false
    endif
    assign text_color = false
    if section.settings.section_color != 'rgba(0,0,0,0)' and section.settings.section_color != blank
      assign text_color = true
      assign text_color_section = section.settings.section_color
    endif
    assign background_color = false
    if section.settings.background != 'rgba(0,0,0,0)' and section.settings.background != blank
      assign background_color = true
      assign background_color_section = section.settings.background
    endif    
    if section.settings.background_gradient != 'rgba(0,0,0,0)' and section.settings.background_gradient != blank
      assign background_color = true
      assign background_color_section = section.settings.background_gradient
    endif
    capture classes
      echo 'dynamic-section dynamic-section-'
      echo section.id 
      echo ' section-padding-top section-padding-bottom section-margin-bottom '
      if section.settings.padding_border
        echo 'section-border '
      endif
    endcapture
    assign overlay_color = false
    if section.settings.background_img_overlay != 'rgba(0,0,0,0)' and section.settings.background_img_overlay != blank
      assign overlay_color = true
      assign overlay_color_section = section.settings.background_img_overlay
    endif
    if section.settings.background_img_overlay_gradient != 'rgba(0,0,0,0)' and section.settings.background_img_overlay_gradient != blank
      assign overlay_color = true
      assign overlay_color_section = section.settings.background_img_overlay_gradient
    endif
    assign slider_color = false
    if section.settings.use_slider_color != 'rgba(0,0,0,0)' and section.settings.use_slider_color != blank
      assign slider_color = true
      assign slider_color_section = section.settings.use_slider_color
    endif
    assign banner = false
    if section.settings.enable_lazy
      assign lazy = 'lazy'
    else
      assign lazy = 'eager'
    endif
  -%}

  {% style %}
    .dynamic-section-{{ section.id }} { 
      --margin_padding_desktop: {{ section.settings.padding_desktop }}vh;
      --margin_padding_mobile: {{ section.settings.padding_mobile }}vh;
      {%- if background_color -%}
      --background:{{ background_color_section }};
      --button_primary_text:{{ section.settings.background }};
      --button_secondary_hover:{{ section.settings.background }};
      {%- endif -%}
      {% if slider_color %}
      --arrow_color:{{ slider_color_section }};
      {% endif %}
      --section-padding-top-mobile: {{ section.settings.padding_top_mobile }}px;
      --section-padding-top-desktop: {{ section.settings.padding_top_desktop }}px;
      --section-padding-bottom-mobile: {{ section.settings.padding_bottom_mobile }}px;
      --section-padding-bottom-desktop: {{ section.settings.padding_bottom_desktop }}px;
      --section-margin-bottom-mobile: {{ section.settings.margin_bottom_mobile }}px;
      --section-margin-bottom-desktop: {{ section.settings.margin_bottom_desktop }}px;
    }
    .dynamic-section-{{ section.id }} .banner-section { 
      {%- if text_color -%}
      --headline_font_color:{{ text_color_section }};
      {%- endif -%}
      {%- if overlay_color -%}
      --overlay_background: {{ overlay_color_section }};
      --overlay_opacity: {{ section.settings.background_img_overlay_opacity | times: 0.01 }};
      {%- endif -%}
    }
  {% endstyle %}
  
  <section data-section-id="{{ section.id }}" 
           data-section-type="carousel"
           data-url="{{ 'script.carousel.js' | asset_url }}"
           data-carousel-type="section"
           class="{{ classes }}{% if settings.animation_enable %}animate-section-div {% endif %}clearfix">
  
    {% if section.settings.title != blank or section.settings.sub_title != blank or background_img %}
      {%- liquid
        assign block_width = section.settings.block_width
        case block_width
          when '4'
            assign block_width = 'four'
          when '6'
            assign block_width = 'six'
          when '8'
            assign block_width = 'eight'
          when '9'
            assign block_width = 'nine'
        endcase
      -%}
      <div class="banner-section {% if full_width %}bottompad{% if slider %}-quarter {% else %}-half {% endif %}{% if background_img or overlay_color %}relative {% if background_img %}lazycontainer {% endif %}{% if overlay_color %}background-overlay {% endif %}{% endif %}{% endif %}clearfix">
        {%- liquid
          if full_width and section.settings.background_img_d != blank
            assign banner = true
            if section.settings.background_img_m != blank
              assign screen = 'desktop-image '
            endif
          render 'image.load', img_src: section.settings.background_img_d, size: section.settings.background_img_d.width, alt: alt_d, background: true, screen: screen, full_width: true, lazy: lazy, sizes: '100vw'
          endif
          if full_width and section.settings.background_img_m != blank
            assign banner = true
            if section.settings.background_img_d != blank
              assign screen = 'mobile-image '
            endif
          render 'image.load', img_src: section.settings.background_img_m, size: section.settings.background_img_m.width, alt: alt_m, background: true, screen: screen, full_width: true, lazy: lazy, sizes: '100vw'
          endif
        -%}
        <div class="relative container{% if full_width %} half-pad{% else %} {% if background_img or overlay_color %}inner-container{% else %}half-pad{% endif %}{% endif %}{% if settings.animation_enable %} animate-section load{% endif %} clearfix">
          <div class="{% if full_width == false %}{% if background_img or overlay_color %}inner-container-pad relative {% if background_img %}lazycontainer {% endif %}{% if overlay_color %}background-overlay {% endif %}{% endif %}{% endif %}clearfix">
            {%- liquid
              if full_width == false and section.settings.background_img_d != blank
                assign banner = true
                if section.settings.background_img_m != blank
                  assign screen = 'desktop-image '
                endif
                render 'image.load', img_src: section.settings.background_img_d, size: section.settings.background_img_d.width, alt: alt_d, background: true, screen: screen
              endif
              if full_width == false and section.settings.background_img_m != blank
                assign banner = true
                if section.settings.background_img_d != blank
                  assign screen = 'mobile-image '
                endif
                render 'image.load', img_src: section.settings.background_img_m, size: section.settings.background_img_m.width, alt: alt_m, background: true, screen: screen
              endif
            -%}
            <div class="relative table content-height content-height-options clearfix">
              <div class="table-cell {{ section.settings.vertical_content_alignment }}">
                <div class="{{ block_width }} animate {{ section.settings.text_alignment }} {{ section.settings.horizontal_content_alignment }} bottompad-quarter section-height clearfix">
                  {%- liquid
                    if section.settings.title_h1
                      assign title = 1
                    else
                      assign title = 2
                    endif
                  -%}
                  {% if section.settings.title != blank%}<h{{ title }} class="section-title-{{ section.settings.title_size }}">{{ section.settings.title | escape }}</h{{ title }}>{% if overlay_color %}{%- assign banner = true -%}{% endif %}{% endif %}
                  {% if section.settings.sub_title != blank %}<h3 class="section-title-{{ section.settings.title_sub_size }}">{{ section.settings.sub_title | escape }}</h3>{% if overlay_color %}{%- assign banner = true -%}{% endif %}{% endif %}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>  
    {% endif %}
    
    <div class="container {% if banner %}inner-container {% else %}{% if slider %}no-pad {% else %}half-pad {% endif %}{% endif %}{% if settings.animation_enable %}animate-section animate-section-margin load {% endif %}clearfix">
      <div class="{% if slider %}glider-contain {% unless full_width %}inner-container-grid-slider {% else %}inner-container-pad {% endunless %}{% else %}{% if banner %}{% unless full_width %}inner-container-grid {% endunless %}{% endif %}{% endif %}tab-body">
        <div{% if slider %} id="glider-carousel-{{ section.id }}" data-limit="{{ section.settings.product_row | minus: 0.5 }}" {% endif %} class="{% if banner %}background-white {% endif %}{% if slider %}glider {% if list_count < 5 %}no-drag {% endif %}{% endif %}table-center text-center clearfix">
          <div class="product-loop{% if list_count < 5 %} {{ section.settings.horizontal_content_alignment }}{% endif %}{% if slider %} glider-track{% endif %}">
            {%- liquid
              if slider
                case section.settings.product_row
                  when 2
                    assign block_width = 'six'
                    assign size = 880
                    assign sizes = 'calc(66.66vw - 30px)'
                  when 3
                    assign block_width = 'four'
                    assign size = 460
                    assign sizes = '(min-width: 600px) calc(40vw - 30px), calc(66.66vw - 30px)'
                  when 4
                    assign block_width = 'three'
                    assign size = 400
                    assign sizes = '(min-width: 600px) calc(40vw - 30px), (min-width: 768px) calc(28.57vw - 30px), calc(66.66vw - 30px)'
                  else
                    assign block_width = 'two-half'
                    assign size = 400
                    assign sizes = '(min-width: 600px) calc(40vw - 30px), (min-width: 768px) calc(22.22vw - 30px), calc(66.66vw - 30px)'
                endcase
              else
                case section.settings.product_row
                  when 2
                    assign block_width = 'six'
                    assign size = 580
                    assign sizes = '(min-width: 768px) calc(50vw - 40px), calc(50vw - 40px)'
                  when 3
                    assign block_width = 'four'
                    assign size = 380
                    assign sizes = '(min-width: 768px) calc(33.33vw - 40px), calc(50vw - 40px)'
                  when 4
                    assign block_width = 'three'
                    assign size = 360
                    assign sizes = '(min-width: 768px) calc(25vw - 40px), calc(50vw - 40px)'
                  else
                    assign block_width = 'two-half'
                    assign size = 360
                    assign sizes = '(min-width: 768px) calc(20.833vw - 40px), calc(50vw - 40px)'
                endcase
              endif
            -%}
            {% for block in section.blocks %}
              {%- liquid
                assign collection = collections[block.settings.collection]
                capture current
                    cycle 1, 2, 3, 4, 5, 6
                endcapture
              -%}
              <div class="product product-{{ section.id }} {{ block_width }} top brands animate animate-loop-{{ forloop.index0 }} relative" {{ block.shopify_attributes }}>
                <div class="product-border">
                  {% if block.settings.block_img != blank or collection.image != blank or collection.products.first.featured_media != blank or collection == empty %}
                  <div class="product-thumb{% if section.settings.image_fit %} background-align{% endif %}">            
                    <a href="{% if collection == empty %}{{ routes.all_products_collection_url }}{% else %}{{ collection.url }}{% endif %}" title="{% if collection == empty %}{{ 'homepage.onboarding.collection_title' | t | escape }}{% else %}{{ collection.title | escape }}{% endif %}" class="no-deco" tabindex="-1">
                      {% if collection == empty %}
                        {{ 'collection-' | append: current | placeholder_svg_tag: 'placeholder-svg' }}
                      {% else %}                      
                        <div class="relative lazycontainer">
                          {%- liquid
                            if block.settings.block_img != blank
                              assign img_src = block.settings.block_img
                            elsif section.settings.use_product_image or collection.image == blank
                              assign img_src = collection.products.first.featured_media.preview_image
                            else
                              assign img_src = collection.image
                            endif
                            capture alt
                              if img_src.alt != blank
                                echo img_src.alt
                              else
                                echo collection.title
                              endif
                            endcapture
                            if section.settings.image_fit
                              render 'image.load', img_src: img_src, size: size, alt: alt, background: true, lazy: lazy, sizes: sizes
                            else
                              render 'image.load', img_src: img_src, size: size, alt: alt, nopad: section.settings.image_fit, lazy: lazy, sizes: sizes
                            endif
                          -%}
                        </div>
                      {% endif %}
                    </a>
                  </div>
                  {% endif %}
  
                  <div class="{{ section.settings.text_alignment }}">
                    <h4 class="section-title-{{ section.settings.collection_title_size }}"><a href="{% if collection == empty %}{{ routes.all_products_collection_url }}{% else %}{{ collection.url }}{% endif %}" class="keyed" title="{% if collection == empty %}{{ 'homepage.onboarding.collection_title' | t }}{% else %}{{ collection.title }}{% endif %}">{% if collection == empty %}{{ 'homepage.onboarding.collection_title' | t }}{% else %}{{ collection.title }}{% endif %}</a></h4>
                    {% if block.settings.body != blank %}{{ block.settings.body }}{% endif %}
                    {% if block.settings.button != blank %}<a href="{% if collection == empty %}{{ routes.all_products_collection_url }}{% else %}{{ collection.url }}{% endif %}" class="btn auto-width{% if section.settings.outline_button %} outline{% endif %} bottompad-half" title="{{ block.settings.button | escape }}" tabindex="-1">{{ block.settings.button | escape }}</a>{% endif %}
                  </div>
                </div>
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
      {% if slider %}
        <div id="glider-pagination-{{ section.id }}" class="glider-pagination {% if section.settings.product_row > list_count %}hidden {% endif %}tab-body relative">
          <button id="glider-button-prev-{{ section.id }}" class="glider-button-prev" type="button" aria-label="{{ 'products.general.previous' | t | escape }}">{%- render 'icons.theme', icon: 'left', size: '16' -%}</button>
          <button id="glider-button-next-{{ section.id }}" class="glider-button-next" type="button" aria-label="{{ 'products.general.next' | t | escape }}">{%- render 'icons.theme', icon: 'right', size: '16' -%}</button>
        </div>
      {% endif %}
    </div>
    
  </section>
  
{% endif %}

{% schema %}
  {
    "name": "t:sections.collection_grid.name",
    "settings": [
      {
        "type": "header",
        "content": "t:sections.banner.label"
      },
      {
        "type": "text",
        "id": "title",
        "label": "t:sections.heading.label",
		"default": "Collection grid"
      },
      {
        "id": "title_h1",
        "type": "checkbox",
        "label": "t:sections.heading.heading_one",
        "default": false
      },
      {
        "id": "title_size",
        "type": "range",
        "label": "t:sections.heading.heading_size",
        "min": 12,
        "max": 96,
        "step": 6,
        "unit": "px",
        "default": 48
      },
      {
        "type": "text",
        "id": "sub_title",
        "label": "t:sections.subheading.label",
		"default": "Group similar collections to share a story about the products"
      },
      {
        "id": "title_sub_size",
        "type": "range",
        "label": "t:sections.subheading.subheading_size",
        "min": 12,
        "max": 96,
        "step": 6,
        "unit": "px",
        "default": 24
      },
      {
        "id": "section_color",
        "type": "color",
        "label": "t:sections.text.color"
      },
      {
        "type": "select",
        "id": "text_alignment",
        "label": "t:sections.text_alignment.label",
        "default": "text-center",
        "options": [
          {
            "value": "text-left",
            "label": "t:sections.alignment.left"
          },
          {
            "value": "text-center",
            "label": "t:sections.alignment.center"
          },
          {
            "value": "text-right",
            "label": "t:sections.alignment.right"
          }
        ]
      },
      {
        "type": "select",
        "id": "block_width",
        "label": "t:sections.content_width.label",
        "default": "6",
        "options": [
          {
            "value": "4",
            "label": "33%"
          },
          {
            "value": "6",
            "label": "50%"
          },
          {
            "value": "8",
            "label": "66%"
          },
          {
            "value": "9",
            "label": "75%"
          }
        ]
      },
      {
        "type": "select",
        "id": "horizontal_content_alignment",
        "label": "t:sections.horizontal_position.label",
        "default": "center",
        "options": [
          {
            "value": "left",
            "label": "t:sections.alignment.left"
          },
          {
            "value": "center",
            "label": "t:sections.alignment.center"
          },
          {
            "value": "right",
            "label": "t:sections.alignment.right"
          }
        ]
      },
      {
        "type": "select",
        "id": "vertical_content_alignment",
        "label": "t:sections.vertical_position.label",
        "default": "middle",
        "options": [
          {
            "value": "top",
            "label": "t:sections.vertical_position.top"
          },
          {
            "value": "middle",
            "label": "t:sections.vertical_position.middle"
          },
          {
            "value": "bottom",
            "label": "t:sections.vertical_position.bottom"
          }
        ]
      },
      {
        "type": "image_picker",
        "id": "background_img_d",
        "label": "t:sections.image.desktop.label",
        "info": "t:sections.image.desktop.info"
      },
      {
        "type": "image_picker",
        "id": "background_img_m",
        "label": "t:sections.image.mobile.label",
        "info": "t:sections.image.mobile.info"
      },
	  {
       "type": "checkbox",
       "id": "full_width",
       "label": "t:sections.full_width.label",
       "default": true
      },
      {
        "type": "range",
        "id": "padding_desktop",
        "min": 5,
        "max": 100,
        "step": 5,
        "unit": "%",
        "label": "t:sections.height.desktop.label",
        "default": 25
      },
      {
        "type": "range",
        "id": "padding_mobile",
        "min": 5,
        "max": 100,
        "step": 5,
        "unit": "%",
        "label": "t:sections.height.mobile.label",
        "default": 25
      },
	  {
        "type": "color",
        "id": "background_img_overlay",
        "label": "t:sections.overlay.label"
      },
      {
        "type": "color_background",
        "id": "background_img_overlay_gradient",
        "label": "t:sections.overlay.gradient"
      },
      {
        "type": "range",
        "id": "background_img_overlay_opacity",
        "min": 0,
        "max": 100,
        "step": 5,
        "unit": "%",
        "label": "t:sections.opacity.label",
        "default": 0
      },
      {
        "type": "header",
        "content": "t:sections.options.label"
      },
      {
        "type": "range",
        "id": "product_row",
        "min": 2,
        "max": 5,
        "step": 1,
        "label": "t:sections.collections_per_row.label",
        "default": 5
      },
      {
        "type": "checkbox",
        "id": "use_product_image",
        "label": "t:sections.show_first.label",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "image_fit",
        "label": "t:settings_schema.products.settings.options_ratio.label",
        "info": "t:settings_schema.products.settings.options_ratio.info_2",
        "default": true
      },
      {
        "id": "collection_title_size",
        "type": "range",
        "label": "t:sections.heading.heading_size",
        "min": 12,
        "max": 48,
        "step": 6,
        "unit": "px",
        "default": 18
      },
      {
        "type": "checkbox",
        "id": "outline_button",
        "label": "t:sections.outline.label_plural",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "use_slider",
        "label": "t:sections.use_slider_collections.label",
        "default": true
      },
      {
        "id": "use_slider_color",
        "type": "color",
        "label": "t:sections.multi_slide_color.label"
      },
      {
        "type": "header",
        "content": "t:sections.section.name.content"
      },
      {
        "id": "enable_lazy",
        "type": "checkbox",
        "label": "t:sections.section.settings.lazy.multiple.label",
        "default": true
      },
      {
        "id": "background",
        "type": "color",
        "label": "t:sections.section.settings.background_color.label"
      },
      {
        "id": "background_gradient",
        "type": "color_background",
        "label": "t:sections.section.settings.background_gradient.label"
      },
      {
        "type": "paragraph",
        "content": "t:sections.section.settings.mobile.content"
      },
      {
        "id": "padding_top_mobile",
        "type": "range",
        "label": "t:sections.section.settings.top_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 20
      },
      {
        "id": "padding_bottom_mobile",
        "type": "range",
        "label": "t:sections.section.settings.bottom_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 20
      },
      {
        "id": "margin_bottom_mobile",
        "type": "range",
        "label": "t:sections.section.settings.bottom_margin.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 20
      },
      {
        "type": "paragraph",
        "content": "t:sections.section.settings.desktop.content"
      },
      {
        "id": "padding_top_desktop",
        "type": "range",
        "label": "t:sections.section.settings.top_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 40
      },
      {
        "id": "padding_bottom_desktop",
        "type": "range",
        "label": "t:sections.section.settings.bottom_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 40
      },
      {
        "id": "margin_bottom_desktop",
        "type": "range",
        "label": "t:sections.section.settings.bottom_margin.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 40
      },
      {
        "id": "padding_border",
        "type": "checkbox",
        "label": "t:sections.section.settings.border.label",
        "default": true
      }
    ],
    "blocks": [
      {
        "type": "collection",
        "name": "t:sections.collection.label",
        "settings": [
          {
            "type": "collection",
            "id": "collection",
            "label": "t:sections.collection.label"
          },
          {
            "type": "image_picker",
            "id": "block_img",
            "label": "t:sections.custom_image.label"
          },
          {
            "type": "richtext",
            "id": "body",
            "label": "t:sections.text.label",
			"default": "<p>Use custom text to relate how the collection fits into the story line</p>"
          },
          {
            "type": "text",
            "id": "button",
            "label": "t:sections.button.label",
			"default": "Shop"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "t:sections.collection_grid.name",
        "blocks": [
          {
            "type": "collection"
          },
          {
            "type": "collection"
          },
          {
            "type": "collection"
          },
          {
            "type": "collection"
          },
          {
            "type": "collection"
          }
        ]
      }
    ],
    "disabled_on": {
	  "templates": ["password"],
      "groups": ["custom.overlay"]
    }
  }
{% endschema %}