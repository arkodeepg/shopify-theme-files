{% if section.settings.title != blank or section.settings.sub_title != blank or section.settings.body != blank or section.settings.link != blank %}

  {%- liquid
    assign text_color = false
    if section.settings.section_color != 'rgba(0,0,0,0)' and section.settings.section_color != blank
      assign text_color = true
      assign text_color_section = section.settings.section_color
    endif     
    assign text_color_hover = false
    if section.settings.section_color_hover != 'rgba(0,0,0,0)' and section.settings.section_color_hover != blank
      assign text_color_hover = true
      assign text_color_hover_section = section.settings.section_color_hover
    endif
    assign background_color = false
    if section.settings.background != 'rgba(0,0,0,0)' and section.settings.background != blank
      assign background_color = true
      assign background_color_section = section.settings.background
    endif    
    if section.settings.background_gradient != 'rgba(0,0,0,0)' and section.settings.background_gradient != blank
      assign background_color = true
      assign background_color_section = section.settings.background_gradient
    endif
    capture classes
      echo 'dynamic-section dynamic-section-'
      echo section.id 
      echo ' section-padding-top section-padding-bottom section-margin-bottom '
      if section.settings.padding_border
        echo 'section-border '
      endif
    endcapture
    assign slider_color = false
    if section.settings.use_slider_color != 'rgba(0,0,0,0)' and section.settings.use_slider_color != blank
      assign slider_color = true
      assign slider_color_section = section.settings.use_slider_color
    endif
  -%}
  
  {% style %}
    .dynamic-section-{{ section.id }} { 
      {%- if text_color -%}
      --accent_color:{{ text_color_section }};
      --headline_font_color:{{ text_color_section }};
      --body_font_color:{{ text_color_section }};
      --line_color:{{ text_color_section }};
      --button_primary_background:{{ text_color_section }};
      --button_primary_border:{{ text_color_section }};
      --button_primary_text:var(--background);
      --button_secondary_hover:var(--background);
      {%- endif -%}
      {%- if text_color_hover -%}
      --body_font_hover_color:{{ text_color_hover_section }};
      {%- endif -%}
      {%- if background_color -%}
      --background:{{ background_color_section }};
      --button_primary_text:{{ section.settings.background }};
      --button_secondary_hover:{{ section.settings.background }};
      {%- endif -%}
      --section-padding-top-mobile: {{ section.settings.padding_top_mobile }}px;
      --section-padding-top-desktop: {{ section.settings.padding_top_desktop }}px;
      --section-padding-bottom-mobile: {{ section.settings.padding_bottom_mobile }}px;
      --section-padding-bottom-desktop: {{ section.settings.padding_bottom_desktop }}px;
      --section-margin-bottom-mobile: {{ section.settings.margin_bottom_mobile }}px;
      --section-margin-bottom-desktop: {{ section.settings.margin_bottom_desktop }}px;
    }
  {% endstyle %}
  
  <section data-section-id="{{ section.id }}" 
           data-section-type="rich_text"
           class="{{ classes }}{% if settings.animation_enable %}animate-section-div {% endif %}clearfix">
  
    {%- liquid
      assign block_width = section.settings.block_width
      case block_width
        when '4'
          assign block_width = 'four'
        when '6'
          assign block_width = 'six'
        when '8'
          assign block_width = 'eight'
        when '9'
          assign block_width = 'nine'
      endcase
    -%}
    <div class="relative container half-pad{% if settings.animation_enable %} animate-section load{% endif %} clearfix">
      <div class="{{ block_width }} animate {{ section.settings.text_alignment }} {{ section.settings.text_alignment | split:'-' | last }}">
        {%- liquid
          if section.settings.title_h1
          assign title = 1
          else
          assign title = 2
          endif
        -%}
        {% if section.settings.title != blank%}<h{{ title }} class="section-title-{{ section.settings.title_size }} ">{{ section.settings.title | escape }}</h{{ title }}>{% endif %}
        {% if section.settings.sub_title != blank %}<h3 class="section-title-{{ section.settings.title_sub_size }} ">{{ section.settings.sub_title | escape }}</h3>{% endif %}
        {% if section.settings.body != blank %}{{ section.settings.body }}{% endif %}
        {% if section.settings.link != blank %}<p><a href="{{ section.settings.link | escape }}" title="{% if section.settings.title != blank%}{{ section.settings.title | escape }}{% else %}{{ 'homepage.onboarding.no_more' | t | escape }}{% endif %}" class="btn{% if section.settings.outline_button %} outline{% endif %}">{% if section.settings.button != blank %}{{ section.settings.button | escape }}{% else %}{{ 'homepage.onboarding.no_more' | t }}{% endif %}</a></p>{% endif %}
      </div>
    </div>
    
  </section>

{% endif %}
  
{% schema %}
  {
    "name": "t:sections.rich_text.name",
    "settings": [
      {
        "type": "header",
        "content": "t:sections.banner.label"
      },
      {
        "type": "text",
        "id": "title",
        "label": "t:sections.heading.label",
		"default": "Rich text"
      },
      {
        "id": "title_h1",
        "type": "checkbox",
        "label": "t:sections.heading.heading_one",
        "default": false
      },
      {
        "id": "title_size",
        "type": "range",
        "label": "t:sections.heading.heading_size",
        "min": 12,
        "max": 96,
        "step": 6,
        "unit": "px",
        "default": 48
      },
      {
        "type": "text",
        "id": "sub_title",
        "label": "t:sections.subheading.label",
		"default": "Highlight promotions, certifications, or the latest news"
      },
      {
        "id": "title_sub_size",
        "type": "range",
        "label": "t:sections.subheading.subheading_size",
        "min": 12,
        "max": 96,
        "step": 6,
        "unit": "px",
        "default": 24
      },
      {
        "type": "richtext",
        "id": "body",
        "label": "t:sections.text.label"
      },
      {
        "type": "url",
        "id": "link",
        "label": "t:sections.link.label"
      },
      {
        "type": "text",
        "id": "button",
        "label": "t:sections.button.label"
      },
      {
        "type": "checkbox",
        "id": "outline_button",
        "label": "t:sections.outline.label",
        "default": false
      },
      {
        "id": "section_color",
        "type": "color",
        "label": "t:sections.text.color"
      },
      {
        "id": "section_color_hover",
        "type": "color",
        "label": "t:sections.text.hover"
      },
      {
        "type": "select",
        "id": "text_alignment",
        "label": "t:sections.text_alignment.label",
        "default": "text-center",
        "options": [
          {
            "value": "text-left",
            "label": "t:sections.alignment.left"
          },
          {
            "value": "text-center",
            "label": "t:sections.alignment.center"
          },
          {
            "value": "text-right",
            "label": "t:sections.alignment.right"
          }
        ]
      },
      {
        "type": "select",
        "id": "block_width",
        "label": "t:sections.content_width.label",
        "default": "6",
        "options": [
          {
            "value": "4",
            "label": "33%"
          },
          {
            "value": "6",
            "label": "50%"
          },
          {
            "value": "8",
            "label": "66%"
          },
          {
            "value": "9",
            "label": "75%"
          }
        ]
      },
      {
        "type": "header",
        "content": "t:sections.section.name.content"
      },
      {
        "id": "background",
        "type": "color",
        "label": "t:sections.section.settings.background_color.label"
      },
      {
        "id": "background_gradient",
        "type": "color_background",
        "label": "t:sections.section.settings.background_gradient.label"
      },
      {
        "type": "paragraph",
        "content": "t:sections.section.settings.mobile.content"
      },
      {
        "id": "padding_top_mobile",
        "type": "range",
        "label": "t:sections.section.settings.top_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 20
      },
      {
        "id": "padding_bottom_mobile",
        "type": "range",
        "label": "t:sections.section.settings.bottom_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 20
      },
      {
        "id": "margin_bottom_mobile",
        "type": "range",
        "label": "t:sections.section.settings.bottom_margin.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 20
      },
      {
        "type": "paragraph",
        "content": "t:sections.section.settings.desktop.content"
      },
      {
        "id": "padding_top_desktop",
        "type": "range",
        "label": "t:sections.section.settings.top_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 40
      },
      {
        "id": "padding_bottom_desktop",
        "type": "range",
        "label": "t:sections.section.settings.bottom_pad.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 40
      },
      {
        "id": "margin_bottom_desktop",
        "type": "range",
        "label": "t:sections.section.settings.bottom_margin.label",
        "min": 0,
        "max": 60,
        "step": 10,
        "unit": "px",
        "default": 40
      },
      {
        "id": "padding_border",
        "type": "checkbox",
        "label": "t:sections.section.settings.border.label",
        "default": true
      }
    ],
    "presets": [
      {
        "name": "t:sections.rich_text.name"
      }
    ],
    "disabled_on": {
	  "templates": ["password"],
      "groups": ["custom.overlay"]
    }
  }
{% endschema %}